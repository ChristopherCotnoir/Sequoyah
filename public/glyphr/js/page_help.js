// start of file

	function loadPage_help(){
		// debug("LOADING PAGE >> loadPage_help");
		var content = "<a name='top' style='height:0px;'></a><h1 class='pagetitle'>Help</h1><div class='textpage pagecontent'>";
		content += "<p> Peruse the document, but if you have any other questions, you can email <a href='mailto:mail@glyphrstudio.com'>mail@glyphrstudio.com</a>, and we'd be happy to help out. </p> <p> Have a new feature idea? Or a suggestion about how to make a current feature better? <a href='https://glyphrstudio.uservoice.com/' target=_new> Help us out by voting for new features or suggesting improvements. </a> </p> <br> <i>Jump to a section</i><br> <a href='#character_edit_and_linked_shapes_pages' style='font-weight:bold; padding-top:16px;'>Common&nbsp;Character&nbsp;Editing&nbsp;Pages</a>:<br> Editing:&emsp; <a href='#shape_editing'>Shape&nbsp;Editing</a> &emsp; <a href='#edit_canvas_tools'>Edit&nbsp;Canvas&nbsp;Tools</a> &emsp; <a href='#keyboard_shortcuts'>Keyboard&nbsp;Shortcuts</a> &emsp; <br> Panels:&emsp; <a href='#character_panel'>Character</a> &emsp; <a href='#shape_attributes_panel'>Shape</a> &emsp; <a href='#path_point_attributes_panel'>Path&nbsp;Point</a> &emsp; <a href='#linked_shape_instance_attributes_panel'>Linked&nbsp;Shape&nbsp;Instance</a> &emsp; <a href='#edit_history_panel'>Edit&nbsp;History</a> &emsp; <a href='#guides_panel'>Guides</a> <br> <br> <b>Pages</b>:<br> <a href='#ligatures_page'>Ligatures&nbsp;Page</a> &emsp; <a href='#kerning_page'>Kerning&nbsp;Page</a> &emsp; <a href='#test_drive_page'>Test&nbsp;Drive&nbsp;Page</a> &emsp; <a href='#font_settings_page'>Font&nbsp;Settings&nbsp;Page</a> &emsp; <a href='#project_settings_page'>Project&nbsp;Settings&nbsp;Page</a> &emsp; <a href='#import_svg_page'>Import&nbsp;SVG&nbsp;Page</a> &emsp; <a href='#export_font_page'>Export&nbsp;Font&nbsp;Page</a> &emsp; <a href='#about_page'>About&nbsp;Page</a> &emsp; <br><br> <a name='navigation_and_layout'></a> <h1>Navigation and Layout</h1> <p> The Glyphr Studio work space has three vertical areas: from left to right, the Navigation Bar, the Panel, and the Main Content area. Selecting an icon in the Navigation Bar will update the Panel and the Main Content areas. Pressing the Glyphr Studio logo in the upper left part of the Navigation Bar displays all the main pages in the Panel, allowing you to navigate around Glyphr Studio. </p> <p> Some of the pages have additional Navigation Bar icons - like Attributes, Layers, and Character Selection - that are specific to character editing, or other activities. </p> <p> The bottom-most icon in the Navigation Bar is a save icon - it does not actually navigate anywhere, but instead is just an omnipresent shortcut to save your Glyphr Project. When there are changes that have not been saved, the save icon becomes slightly highlighted, and a diamond icon &#10070; will be added to the browser title. </p> <span class='btt'><a href='#top'>back to top</a></span> <a name='character_edit_and_linked_shapes_pages'></a> <h1>Common Character Editing Pages</h1> <p> Character Edit, Ligatures, and Linked Shapes pages have many shape editing controls in common. Linked Shapes are single outlines that can be inserted into many characters of a font. Updating the Linked Shape will also update all the Linked Shape instances. Characters and Ligatures in your font can have many shapes (both linked and not), so there is an added concept of Layers on the Character Edit and Ligatures pages. </p> <p> Linked Shapes are individual shapes that can be added to many Characters or Ligatures. Any time the Linked Shape is edited, all the Characters or Ligatures that use that Linked Shape are updated. There are many individual letter forms that are shared across characters in a single font - for example the round o form of the letters b,d,g,o,p,q. Linked Shapes were designed to make it easy to keep similar letter forms consistent across a font. </p> <p> Creating new Linked Shapes, and adding a Linked Shape to a character can be done through the Actions list in the Attributes Panel. The Linked Shapes page is very similar to the Character Edit page. Each Linked Shape is just a single Shape, so there are no shape layers, or add shape buttons. The Linked Shapes page also displays all the shapes that use the current Linked Shape - they are displayed as a thumbnail in the lower left, and update as the Linked Shape is edited. Clicking on one of these thumbnails will navigate to the Character Edit or Ligature page for that character. </p> <span class='btt'><a href='#top'>back to top</a></span> <a name='shape_editing'></a> <h2>Shape Editing</h2> <p> Shape editing concepts can be found on the Character Edit, Ligatures, and Linked Shapes pages. Shape and Path attributes, along with metadata, can be edited either in the Attributes Panel, or interactively using the Edit Canvas in the Content Area. </p> <p> Many of these attributes can be locked by selecting the small lock icon to the left of the attribute value. This will stop this attribute from accidentally being changed, and in most cases, will limit what can be done on the Edit Canvas. </p> <p> Unless otherwise noted, most attributes are in Em units. </p> <span class='btt'><a href='#top'>back to top</a></span> <a name='edit_canvas_tools'></a> <h2>Edit Canvas Tools</h2> <p> <b>Upper Left: New Shape and Shape Edit</b> </p> <ul> <li> <b>New Rectangle / New Oval</b> - Click and drag to draw new Rectangles or Ovals. </li> <li> <b>New Path</b> - Draws a new path. Single clicking will create Path Points that do not have handles. Clicking and dragging will add a Path Point where the click began, and also a symmetrical handle where the mouse drag ends. </li> <li> <b>Add Path Point</b> (Pen+ Tool) - Click on an existing path, and a new path point will be created there. </li> <li> <b>Path Edit</b> (Pen Tool) - Selects and edits individual Path Points and Handles. It cannot move or resize shapes. </li> <li> <b>Shape Edit</b> (Arrow Tool) - Selects, moves, and resizes shapes. It cannot edit the individual path points. </li> </ul> <p> <b>Upper Right: View Settings</b> </p> <ul> <li> <b>Pan Tool</b> - Moves the canvas up/down/left/right.<br> <i>Keyboard Shortcut: Press Spacebar + Click and Drag</i> </li> <li> <b>1:1 Button</b> - Sets the Zoom level where 1 Pixel = 1 Em Unit. </li> <li> <b>Fit to Screen Button</b> - Sets the Zoom level to display the entire Em square area.<br> <i>Keyboard Shortcut: Ctrl0</i> </li> <li> <b>Zoom Level</b> - Displays the current zoom level percent. Also used to input specific zoom levels. </li> <li> <b>Zoom In / Zoom Out</b> - The plus / minus buttons will increase or decrease the size of the Edit Canvas.<br> <i>Keyboard Shortcut: Ctrl+ or Ctrl-</i> </li> <li> <b>Dual Screen Mode</b> - the Edit Canvas can be torn out into its own window, and all the Panels are laid out side-by-side in the main window. </li> </ul> <span class='btt'><a href='#top'>back to top</a></span> <a name='keyboard_shortcuts'></a> <h2>Keyboard Shortcuts</h2>";
		content += makeKeyboardShortcutsTable();
		content += "<span class='btt'><a href='#top'>back to top</a></span> <a name='character_panel'></a> <h2>Attributes Panel - Character</h2> <p> (Character Edit and Ligatures Pages) </p> <p> When no shape is selected, the Attributes Panel shows attributes for the currently selected Character. </p> <p> <b>Bulk-transform character shapes</b> </p> <p> If there are more than one shape in the character, there are position and dimension controls that will change all the shapes in the character. </p> <ul> <li> <b>X Position</b> - the farthest-left position of the character </li> <li> <b>Y Position</b> - the most-top position of the character </li> <li> <b>Width</b> - the overall width of the character </li> <li> <b>Height</b> - the overall height of the character </li> <li> <b>Lock Aspect Ratio</b> - this will force width and height changes to happen proportionally </li> <li> <b>Flip Vertical / Flip Horizontal</b> - flip the entire character </li> </ul> <p> <b>Width Metrics</b> </p> <p> These metrics are used for exporting a font file </p> <ul> <li> <b>Character Width</b> - by default, Glyphr Studio automatically calculates the width of a character. By un-checking the 'automatically calculate' checkbox, you can manually set the character width. </li> <li> <b>Left and Right Side Bearing</b> - This is a small amount of space that is automatically added before and after all characters. There is a global default that is applied to all characters, but if you want to specify a custom side bearing for a certain character, uncheck the 'use default' checkbox here. </li> </ul> <span class='btt'><a href='#top'>back to top</a></span> <a name='shape_attributes_panel'></a> <h2>Attributes Panel - Shape</h2> <p> (Character Edit, Ligatures, and Linked Shape Pages) </p> <ul> <li> <b>Name</b> - Any name you want to give this shape. </li> <li> <b>Shape X / Shape Y</b> - The shape's coordinates, as defined by the blue bounding box's upper left corner. These attributes are set in Em Units. These attributes are lockable. </li> <li> <b>Height / Width</b> - Overall size dimensions of the shape. These attributes are set in Em Units. These attributes are lockable. </li> <li> <b>Overlap Mode</b> - The clockwise or counterclockwise direction of Path Points along a Path determine if that path will additively or subtractively overlap with other Shapes in the character. </li> </ul> <span class='btt'><a href='#top'>back to top</a></span> <a name='path_point_attributes_panel'></a> <h2>Attributes Panel - Path Point </h2> <p> (Character Edit, Ligatures, and Linked Shape Pages) </p> <ul> <li> <b>Selected Point</b> - Displays which point is currently selected. 0 is the first Path Point. </li> <li> <b>Point Type</b> - Each Path Point has two handles that control the curve of the path before and after it. There are three kinds of Point Types: Corner (Handles can be anywhere), Flat (Handles will be in line with each other), and Symmetric (Handles will be in-line with each other and equidistant from the Path Point). </li> <li> <b>Point X / Point Y</b> - The Path Point's coordinates. These attributes are set in Em Units. These attributes are lockable. <li> <b>Use Handle 1 / Use Handle 2</b> - Deselecting the checkbox by the handle title will remove the handle, such that it will not impact the curvature of the path. These options are only available for Flat and Corner point types. </li> <li> <b>Handle 1 X/Y &amp; Handle 2 X/Y</b> - The Handle's coordinates. These attributes are set in Em Units. These attributes are lockable. </li> <li> <b>Handle 1 Angle / Handle 2 Angle</b> - read-only degree of the handle away from an imaginary horizontal line drawn through the point. Zero degrees is to the left, 180 degrees to the right. </li> </ul> <span class='btt'><a href='#top'>back to top</a></span> <a name='linked_shape_instance_attributes_panel'></a> <h2>Attributes Panel - Linked Shape Instance</h2> <p> (Linked Shape Page) </p> <ul> <li> <b>Name</b> - Any name you want to give this Linked Shape Instance. Can be different than the Linked Shape name itself. </li> <li> <b>Use Linked Shape Position</b> - By default, a Linked Shape Instance is locked to the position of the Linked Shape. Unchecking this option will give you the option to move the Linked Shape Instance. </li> <li> <b>&#916;X / &#916;Y</b> - When Use Linked Shape Position is unselected, these coordinates are used to move the Linked Shape Instance to a new location. These are delta values, meaning they are relative to the original Linked Shape. </li> <li> <b>Linked Shape Name</b> - A read-only value of the Linked Shape that this Linked Shape Instance is linked to. </li> <li> <b>Edit This Linked Shape</b> (action button) - This will navigate to the Linked Shapes page, and allow you to make changes to the original Linked Shape. </li> </ul> <span class='btt'><a href='#top'>back to top</a></span> <a name='edit_history_panel'></a> <h2>Edit History Panel</h2> <p> (Character Edit, Ligatures, Linked Shapes, and Kerning Pages) </p> <p> This panel shows a list of edits that are available to undo. There is a small description of the action, along with a time stamp, and these actions are grouped by Character name. Pressing the 'Undo' button, or Ctrl+z will reverse edits that are listed here. </p> <p> Character Edit, Ligatures, and Linked Shapes pages all have separate undo lists. The Edit History Panel will only show edits that have taken place on that particular page, not across Glyphr Studio as a whole. </p> <span class='btt'><a href='#top'>back to top</a></span> <a name='guides_panel'></a> <h2>Guides Panel</h2> <p> (Character Edit, Ligatures, Linked Shapes, and Kerning Pages) </p> <p> The Guides Panel shows many options for viewing and specifying grids and guides. In general, each guide line is displayed with the following properties (from left to right): </p> <ul> <li> <b>Guide Color</b> - for custom guides click the colored box to choose a new color for this guide. System guides do not have editable colors. </li> <li> <b>View Checkbox</b> - check or uncheck the checkbox to view / hide that particular guide. </li> <li> <b>Guide Type</b> - guides are either horizontal or vertical. For custom guides, click to toggle between vertical and horizontal. System guides cannot toggle type. </li> <li> <b>Guide Name</b> - a name for this guide that is displayed as a label on the edit canvas. System Guides do not have editable names. </li> <li> <b>Guide Location</b> - A number, in Em units, that shows where the guide is located on the edit canvas. System Guides do not have editable locations. </li> <li> <b>Delete Guide</b> - a small 'x' button on the very right of custom guides allows you to delete that guide. System guides cannot be deleted. </li> </ul> <p> <b>Options</b> </p> <p> These toggles show and hide some global aspects of the grid and guides. </p> <p> <b>System Guides</b> </p> <p> These guides reflect key metrics of the font. Their values cannot be edited from the Guides Panel - to edit their values, go to the Font Properties page. </p> <p> <b>Custom Guides</b> </p> <p> These guides are defined by you, and can be in any location you specify. </p> <span class='btt'><a href='#top'>back to top</a></span> <a name='ligatures_page'></a> <h1>Ligatures Page</h1> <p> Ligatures are when two or more characters get combined into one glyph. Generically, when you define a ligature, two or more characters are specified, and instead of showing those characters when a user is typing, those characters get replaced with a single new character. </p> <p> Some common lowercase ligatures involve combining the crossbars of characters like f and t, forming ligatures like &#64256; and &#64261;. A common uppercase ligature is combining the characters A and E into the ligature &AElig;. Ligatures can also be used for any other sequence replacement, for example fractions: the three characters 1 and / and 4 could be turned into the ligature &frac14;. </p> <p> Creating a new ligature is as easy as specifying two or more characters to combine. Designing the resulting character uses exactly the same tools and processes as designing regular characters on the Character Edit page. </p> <span class='btt'><a href='#top'>back to top</a></span> <a name='kerning_page'></a> <h1>Kerning Page</h1> <p> Kerning allows you to adjust the distance between two specific characters, or two sets of characters. Many characters look odd if they appear together using default spacing - for example, A and V. The space between these two characters is usually reduced with kerning so they 'fit' better together. </p> <p> The left or right side of the kern pair can also be a group of letters. For instance, you may decide to kern the letter A on the left with V, W, and Y on the right. This effectively creates three individual kern pairs: AV, AW, and AY. </p> <p> The Kerning Pairs attributes panel shows a list of all the existing kern pairs. The blue rectangle on the left of each line shows which one is currently selected. Specific kern values can be entered in the input on the right of each line, or by clicking and dragging on the edit canvas itself. There is a 'x' button on the far right of each line to delete that kern pair. </p> <span class='btt'><a href='#top'>back to top</a></span> <a name='test_drive_page'></a> <h1>Test Drive Page</h1> <p> The Test Drive page is where your font can be tried out in real time. Typing in the upper textbox will display that same text in your font face in the lower box. </p> <p> In the Attributes Panel, there is a list of Pangram buttons that will populate the upper textbox with sentences that contain all the letters of the alphabet. Similarly, there are buttons that will populate the upper textbox with certain character sets. </p> <p> The Options area lets you change how your font is drawn to the lower box, including options for Font Size, Line Spacing, and Character Spacing. </p> <p> The 'Generate PNG File' button will launch a new tab with an image of whatever is displayed in the lower box. Right-click the image to save the PNG file. </p> <span class='btt'><a href='#top'>back to top</a></span> <a name='font_settings_page'></a> <h1>Font Settings Page</h1> <p> <b>Font Name</b> will be used when exporting your font. </p> <p> <b>Character Proportions</b> deal with global attributes that affect your font. Glyphr Studio uses the properties in the Font Settings section to display and edit shapes: </p> <ul> <li> <b>Key Metrics</b> - Characters have a total height of 1000 Units, called Em Units. The baseline of that character splits the upper and lower portions of the character vertically. Input an Ascent Height, and the Descent Height will be calculated automatically. X Height and Cap Height are common guides for lowercase and uppercase letters in your font. Note: these metrics may be used to scale imported SVG outlines. </li> <li> <b>Default Side Bearing</b> - All characters have a small amount of space to their left and right that separates them from another characters. Individual Side Bearings can be edited in the Attributes Panel of that character. But, to make things easier, if a specific Left or Right Side Bearing is not set, this Default Side Bearing will be applied. </li> </ul> <p> <b>Grids and Guides</b> </p> <ul> <li> <b>Grid System</b> - Divide your Em square into a specified number of sub-units. This will show up as a light gray grid behind your character editing canvas. </li> <li> <b>Overshoot</b> - Round characters are usually slightly larger than their square counterparts so that they visually look the same size. Specify an overshoot measurement here. Note: this metric may be used to scale imported SVG outlines. </li> </ul> <p> <b>Character Ranges</b> </p> <ul> <li> <b>Standard Character Ranges</b> - A list of the four basic Latin character ranges that can be specified for fonts. These common ranges can be enabled or disabled with a checkbox, and their Unicode range values will automatically be added to your Glyphr Studio project. </li> <li> <b>Custom Character Ranges</b> - Can also be added to projects. If you want to design characters that don't fall into the common Latin character ranges above, you can specify a new range here. You'll have to look up the starting and ending Unicode values for the range you want to work with. </li> </ul> <p> <b>Font Metadata </b>is a set of information that describes your font in various ways, and specifies some extra options - like underline and strikethrough attributes. These attributes are exported with your SVG font. </p> <span class='btt'><a href='#top'>back to top</a></span> <a name='project_settings_page'></a> <h1>Project Settings Page</h1> <p> This information does not necessarily have a direct effect on the Font itself, but is used to help with designing your font. This information is saved when a Glyphr Project is saved, and will be imported when a saved project is loaded. </p> <ul> <li> <b>Project Name</b> - Initially, this project name is used as the Font Name as well. But, the Glyphr Project can have a different name from the Font itself, which can be edited here. </li> <li> <b>UI Behavior</b> - This is a set of options that you can adjust that will change how some UI controls behave. </li> </ul> <span class='btt'><a href='#top'>back to top</a></span> <a name='import_svg_page'></a> <h1>Import SVG Page</h1> <h2>Importing</h2> <p> <b>Note:</b> If you have a whole SVG Font, you can import the whole thing by dragging and dropping a .svg font file on the opening page, the same way you open a Glyphr Studio Project File. This section is about importing individual SVG outlines to individual characters. </p> <p>There are many pieces of design software that allow you to create SVG outlines. For example, Adobe Illustrator, or its open-source equivalent Inkscape. However you create the vector outlines of your characters, you can import them via SVG on this page. </p> <p>Importing outlines happens one character at a time, and could be accomplished thusly: </p> <ol> <li> Select a character in the selection pane on the left. This will be the destination for your imported outlines. </li> <li> Specify scaling and moving options. Many times your design software coordinate system setup won't match Glyphr Studio's coordinate system. Enter the specific height metrics for this character (Does it go above the x-height line, or below the baseline? Is it a rounded character that has overshoot?) then select Scale and Move options. Your character outlines will be re-sized and moved to the correct location. </li> <li> If your file is a single character, you can drag and drop it onto the area specified. Otherwise, copy and paste the SVG code into the code box. The importing will not happen until the Import SVG button is pressed, so you can double-check your code before you proceed. </li> <li> Pressing the Import SVG button will parse the SVG code, translate it into Glyphr Studio shapes and paths, and insert it into the specified character. There is also a button to jump to the Character Edit page for the selected character, and a button to clear the code box. </li> </ol> <h2>Notes about SVG</h2> <p> SVG is a huge language that is capable of defining a much larger set of graphic design concepts than are needed for font glyph design. As a result, Glyphr Studio straight up ignores much of the SVG code that gets imported. </p> <p> <b>What Glyphr Studio imports:</b> </p> <ul> <li> Outline data from the following tags: path, rect, polygon, polyline, circle, and ellipse. </li> <li> The following commands from the 'd' attribute in the path tag: Move To (Mm), Line To (Ll), Horizontal Line To (Hh), Vertical Line To (Vv), Bezier Line To (Cc), Smooth Bezier Line To (Ss), Quadratic Bezier Line To (Qq), Smooth Quadratic Bezier Line To (Tt), Close Path (Zz). </li> </ul> <p> <b>What Glyphr Studio ignores:</b> </p> <ul> <li> The 'line' tag. And, basically any tag not mentioned in the previous section. </li> <li> All stroke attributes, like stroke-width. Paths are assumed to be outlines of shapes. </li> <li> The Arc To (Aa) path commands in the 'd' attribute </li> <li> The 'g' tag, and all its attributes. Any transformations are ignored. </li> <li> The 'svg' tag itself. ViewBox, x, y, width, height attributes are all ignored. </li> </ul> <p> <b>Things to keep in mind:</b> </p> <ul> <li> All lines or paths will be closed by Glyphr Studio. AKA: the last point in any path will be connected with the first point. </li> <li> Path direction (or 'winding') is not important in SVG, but it is important in glyph design. Winding determines if two overlapping shapes both appear filled, or if one 'cuts out' from the other. This can be toggled in the Shape Attributes Panel with the 'overlap mode' attribute. </li> <li> Adobe Illustrator artboards don't get exported to SVG. If you're importing from Illustrator, and not using the Scale option in Glyphr Studio, then imported shapes may end up in a surprising location, like way outside the Em square. </li> <li> Some rectangles that have been rotated in Adobe Illustrator export as SVG rectangles with a transform applied (which Glyphr Studio ignores). You can remedy this by right-clicking the rotated rectangle in Illustrator, and selecting 'Make Compound Path'. </li> </ul> <span class='btt'><a href='#top'>back to top</a></span> <a name='export_font_page'></a> <h1>Export Font Page</h1> <p> For Beta 5 and 5.1, Glyphr Studio can export an SVG font straight from your browser. In Beta 6, Glyphr Studio will be able to export Open Type files (.otf), and possibly some other formats. Luckily, there are some free services online that will allow you to convert a SVG Font to whatever format you'd like. So, for now, export a SVG Font and convert it to a 'real' font elsewhere. We're working on making this more streamlined in the future. </p> <p> <b>TTX support was deprecated in Beta 4, and removed in Beta 5</b> - if you super &lt;3 Glyphr Studio plus TTX, you'll have to stick with Beta 4. Them's the breaks. </p> <span class='btt'><a href='#top'>back to top</a></span> <a name='about_page'></a> <h1>About Page</h1> <p> Displays various information about the currently loaded Glyphr Project, and the current Glyphr Studio being used. Glyphr Projects created with different versions of Glyphr Studio may not play nicely together. </p> <p> Please consider making a contribution to the Glyphr Studio effort. Glyphr Studio is, and will always, be totally free... but it does take some cash money to keep it going. </p> <p> If you are a lovely individual who has already contributed, thank you! You are awesome! </p>";
		content += "</div>";
		getEditDocument().getElementById("mainwrapper").innerHTML = content;
	}

// end of file